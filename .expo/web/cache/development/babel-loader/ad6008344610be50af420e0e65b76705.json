{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/joeyg/Desktop/mobile-app/budgetbuddy-mobileapp/src/AppTabs.js\";\n\nimport React, { useContext } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Center } from \"./Center\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { AuthContext } from \"./AuthProvider\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Home from \"./Home\";\nimport Budgets from \"./Budgets\";\nimport Leaderboard from \"./Leaderboard\";\nvar Tabs = createBottomTabNavigator();\nexport var AppTabs = function AppTabs(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return React.createElement(Tabs.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              tintColor = _ref3.tintColor,\n              size = _ref3.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = \"home\";\n            return React.createElement(Icon, {\n              name: \"home\",\n              size: 25,\n              color: tintColor,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 32\n              }\n            });\n          } else if (route.name === \"Budgets\") {\n            iconName = \"budgets\";\n            return React.createElement(Icon, {\n              name: \"line-chart\",\n              size: 25,\n              color: tintColor,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 32\n              }\n            });\n          } else if (route.name === \"Leaderboard\") {\n            iconName = \"leaderboard\";\n            return React.createElement(Icon, {\n              name: \"users\",\n              size: 25,\n              color: tintColor,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 32\n              }\n            });\n          } else if (route.name === \"Settings\") {\n            iconName = \"settings\";\n            return React.createElement(Icon, {\n              name: \"cogs\",\n              size: 25,\n              color: tintColor,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 32\n              }\n            });\n          }\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"blue\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(Tabs.Screen, {\n    name: \"Home\",\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Budgets\",\n    component: Budgets,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Leaderboard\",\n    component: Leaderboard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Settings\",\n    component: Settings,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/home/joeyg/Desktop/mobile-app/budgetbuddy-mobileapp/src/AppTabs.js"],"names":["React","useContext","createBottomTabNavigator","Center","AuthContext","Icon","Home","Budgets","Leaderboard","Tabs","AppTabs","route","tabBarIcon","focused","tintColor","size","iconName","name","activeTintColor","inactiveTintColor","Settings"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,MAAT;;;AAEA,SAASC,WAAT;AACA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP;AAEA,IAAMC,IAAI,GAAGP,wBAAwB,EAArC;AAEA,OAAO,IAAMQ,OAAO,GAAG,SAAVA,OAAU,OAAQ;AAAA;;AAC3B,SACI,oBAAC,IAAD,CAAM,SAAN;AACI,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,aAAgB;AAC3BC,QAAAA,UAAU,EAAE,2BAAkC;AAAA,cAA/BC,OAA+B,SAA/BA,OAA+B;AAAA,cAAtBC,SAAsB,SAAtBA,SAAsB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AAC1C,cAAIC,QAAJ;;AAEA,cAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AACvBD,YAAAA,QAAQ,GAAG,MAAX;AACA,mBAAO,oBAAC,IAAD;AAAM,cAAA,IAAI,EAAC,MAAX;AAAkB,cAAA,IAAI,EAAE,EAAxB;AAA4B,cAAA,KAAK,EAAEF,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,WAHD,MAIK,IAAIH,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;AAC/BD,YAAAA,QAAQ,GAAG,SAAX;AACA,mBAAO,oBAAC,IAAD;AAAM,cAAA,IAAI,EAAC,YAAX;AAAwB,cAAA,IAAI,EAAE,EAA9B;AAAkC,cAAA,KAAK,EAAEF,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,WAHI,MAIA,IAAIH,KAAK,CAACM,IAAN,KAAe,aAAnB,EAAkC;AACnCD,YAAAA,QAAQ,GAAG,aAAX;AACA,mBAAO,oBAAC,IAAD;AAAM,cAAA,IAAI,EAAC,OAAX;AAAmB,cAAA,IAAI,EAAE,EAAzB;AAA6B,cAAA,KAAK,EAAEF,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,WAHI,MAIA,IAAIH,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AAChCD,YAAAA,QAAQ,GAAG,UAAX;AACA,mBAAO,oBAAC,IAAD;AAAM,cAAA,IAAI,EAAC,MAAX;AAAkB,cAAA,IAAI,EAAE,EAAxB;AAA4B,cAAA,KAAK,EAAEF,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;AApB0B,OAAhB;AAAA,KADnB;AAuBI,IAAA,aAAa,EAAE;AACXI,MAAAA,eAAe,EAAE,MADN;AAEXC,MAAAA,iBAAiB,EAAE;AAFR,KAvBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA4BI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAyB,IAAA,SAAS,EAAEb,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,EA6BI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,SAAS,EAAEC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,EA8BI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,IAAI,EAAC,aAAlB;AAAgC,IAAA,SAAS,EAAEC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,EA+BI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,SAAS,EAAEY,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BJ,CADJ;AAmCH,CApCM","sourcesContent":["import React, { useContext } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { Center } from './Center';\nimport { Text, Button } from 'react-native';\nimport { AuthContext } from './AuthProvider';\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport Home from \"./Home\";\nimport Budgets from \"./Budgets\";\nimport Leaderboard from \"./Leaderboard\";\n\nconst Tabs = createBottomTabNavigator();\n\nexport const AppTabs = ({}) => {\n    return (\n        <Tabs.Navigator\n            screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, tintColor, size }) => {\n                    let iconName;\n\n                    if (route.name === \"Home\") {\n                        iconName = \"home\";\n                        return <Icon name=\"home\" size={25} color={tintColor} />\n                    }\n                    else if (route.name === \"Budgets\") {\n                        iconName = \"budgets\";\n                        return <Icon name=\"line-chart\" size={25} color={tintColor} />\n                    }\n                    else if (route.name === \"Leaderboard\") {\n                        iconName = \"leaderboard\";\n                        return <Icon name=\"users\" size={25} color={tintColor} />\n                    }\n                    else if (route.name === \"Settings\") {\n                        iconName = \"settings\";\n                        return <Icon name=\"cogs\" size={25} color={tintColor} />\n                    }\n                }\n            })}\n            tabBarOptions={{\n                activeTintColor: \"blue\",\n                inactiveTintColor: \"gray\"\n            }}\n        >\n            <Tabs.Screen name='Home' component={Home} />\n            <Tabs.Screen name='Budgets' component={Budgets} />\n            <Tabs.Screen name='Leaderboard' component={Leaderboard} />\n            <Tabs.Screen name='Settings' component={Settings} />\n        </Tabs.Navigator>\n    );\n};"]},"metadata":{},"sourceType":"module"}