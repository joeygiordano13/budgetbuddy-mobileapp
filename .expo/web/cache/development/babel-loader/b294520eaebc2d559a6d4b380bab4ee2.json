{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/joeyg/Desktop/mobile-app/budgetbuddy-mobileapp/src/Routes.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Center } from \"./Center\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthContext } from \"./AuthProvider\";\nimport { AppTabs } from \"./AppTabs\";\nimport { AuthStack } from \"./AuthStack\";\nexport var Routes = function Routes() {\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      login = _useContext.login;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    AsyncStorage.getItem('user').then(function (userString) {\n      if (userString) {\n        login();\n      }\n\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n\n  if (loading) {\n    return React.createElement(Center, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, user ? React.createElement(AppTabs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }) : React.createElement(AuthStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 35\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  centertext: {\n    color: \"#20232a\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/joeyg/Desktop/mobile-app/budgetbuddy-mobileapp/src/Routes.js"],"names":["React","useState","useContext","useEffect","NavigationContainer","Center","AsyncStorage","AuthContext","AppTabs","AuthStack","Routes","user","login","loading","setLoading","getItem","then","userString","catch","err","console","log","styles","StyleSheet","create","centertext","color","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,mBAAT,QAAoC,0BAApC;;;AAEA,SAASC,MAAT;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT;AACA,SAASC,OAAT;AACA,SAASC,SAAT;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,oBACAR,UAAU,CAACK,WAAD,CADV;AAAA,MAChBI,IADgB,eAChBA,IADgB;AAAA,MACVC,KADU,eACVA,KADU;;AAAA,kBAEMX,QAAQ,CAAC,IAAD,CAFd;AAAA;AAAA,MAEjBY,OAFiB;AAAA,MAERC,UAFQ;;AAIxBX,EAAAA,SAAS,CAAC,YAAM;AAEZG,IAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EACKC,IADL,CACU,UAAAC,UAAU,EAAI;AAChB,UAAIA,UAAJ,EAAgB;AAEZL,QAAAA,KAAK;AACR;;AACDE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAPL,EAQKI,KARL,CAQW,UAAAC,GAAG,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAVL;AAWH,GAbQ,EAaN,EAbM,CAAT;;AAgBA,MAAGN,OAAH,EAAY;AACR,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAED,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1B,CADJ;AAKH,CAjCM;AAmCP,IAAMW,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,UAAU,EACV;AACIC,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,SAAS,EAAE;AAFf;AAF6B,CAAlB,CAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { StyleSheet, ActivityIndicator } from 'react-native';\nimport { Center } from './Center';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthContext } from './AuthProvider';\nimport { AppTabs } from './AppTabs';\nimport { AuthStack } from './AuthStack';\n\nexport const Routes = () => {\n    const { user, login } = useContext(AuthContext);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        // check if a user is currently logged in\n        AsyncStorage.getItem('user')\n            .then(userString => {\n                if (userString) {\n                    // decode\n                    login();\n                } \n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }, []);\n\n    //console.log('loading: ', loading);\n    if(loading) {\n        return (\n            <Center>\n                <ActivityIndicator size=\"large\" />\n            </Center>\n        );\n    }\n\n    return(\n        <NavigationContainer>\n            {user ? <AppTabs /> : <AuthStack />}\n        </NavigationContainer>\n    );\n};\n\nconst styles = StyleSheet.create({\n    centertext:\n    {\n        color: \"#20232a\",\n        textAlign: \"center\",\n    }\n});"]},"metadata":{},"sourceType":"module"}